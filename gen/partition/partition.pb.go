//
// Copyright(C) Advanced Micro Devices, Inc. All rights reserved.
//
// You may not use this software and documentation (if any) (collectively,
// the "Materials") except in compliance with the terms and conditions of
// the Software License Agreement included with the Materials or otherwise as
// set forth in writing and signed by you and an authorized signatory of AMD.
// If you do not have a copy of the Software License Agreement, contact your
// AMD representative for a copy.
//
// You agree that you will not reverse engineer or decompile the Materials,
// in whole or in part, except as allowed by applicable law.
//
// THE MATERIALS ARE DISTRIBUTED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR
// REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
//

//----------------------------------------------------------------------------
///
/// \file
/// AMD Configs Manager fields
///
//----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: partition.proto

package partition

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GPUComputePartitionType int32

const (
	GPUComputePartitionType_GPU_COMPUTE_TYPE_PARTITION_SPX GPUComputePartitionType = 0
	GPUComputePartitionType_GPU_COMPUTE_TYPE_PARTITION_DPX GPUComputePartitionType = 1
	GPUComputePartitionType_GPU_COMPUTE_TYPE_PARTITION_QPX GPUComputePartitionType = 2
	GPUComputePartitionType_GPU_COMPUTE_TYPE_PARTITION_CPX GPUComputePartitionType = 3
)

// Enum value maps for GPUComputePartitionType.
var (
	GPUComputePartitionType_name = map[int32]string{
		0: "GPU_COMPUTE_TYPE_PARTITION_SPX",
		1: "GPU_COMPUTE_TYPE_PARTITION_DPX",
		2: "GPU_COMPUTE_TYPE_PARTITION_QPX",
		3: "GPU_COMPUTE_TYPE_PARTITION_CPX",
	}
	GPUComputePartitionType_value = map[string]int32{
		"GPU_COMPUTE_TYPE_PARTITION_SPX": 0,
		"GPU_COMPUTE_TYPE_PARTITION_DPX": 1,
		"GPU_COMPUTE_TYPE_PARTITION_QPX": 2,
		"GPU_COMPUTE_TYPE_PARTITION_CPX": 3,
	}
)

func (x GPUComputePartitionType) Enum() *GPUComputePartitionType {
	p := new(GPUComputePartitionType)
	*p = x
	return p
}

func (x GPUComputePartitionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPUComputePartitionType) Descriptor() protoreflect.EnumDescriptor {
	return file_partition_proto_enumTypes[0].Descriptor()
}

func (GPUComputePartitionType) Type() protoreflect.EnumType {
	return &file_partition_proto_enumTypes[0]
}

func (x GPUComputePartitionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPUComputePartitionType.Descriptor instead.
func (GPUComputePartitionType) EnumDescriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{0}
}

type GPUMemoryPartitionType int32

const (
	GPUMemoryPartitionType_GPU_MEMORY_TYPE_PARTITION_NPS1 GPUMemoryPartitionType = 0
	GPUMemoryPartitionType_GPU_MEMORY_TYPE_PARTITION_NPS4 GPUMemoryPartitionType = 1
	GPUMemoryPartitionType_GPU_MEMORY_TYPE_PARTITION_NPS2 GPUMemoryPartitionType = 2
)

// Enum value maps for GPUMemoryPartitionType.
var (
	GPUMemoryPartitionType_name = map[int32]string{
		0: "GPU_MEMORY_TYPE_PARTITION_NPS1",
		1: "GPU_MEMORY_TYPE_PARTITION_NPS4",
		2: "GPU_MEMORY_TYPE_PARTITION_NPS2",
	}
	GPUMemoryPartitionType_value = map[string]int32{
		"GPU_MEMORY_TYPE_PARTITION_NPS1": 0,
		"GPU_MEMORY_TYPE_PARTITION_NPS4": 1,
		"GPU_MEMORY_TYPE_PARTITION_NPS2": 2,
	}
)

func (x GPUMemoryPartitionType) Enum() *GPUMemoryPartitionType {
	p := new(GPUMemoryPartitionType)
	*p = x
	return p
}

func (x GPUMemoryPartitionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPUMemoryPartitionType) Descriptor() protoreflect.EnumDescriptor {
	return file_partition_proto_enumTypes[1].Descriptor()
}

func (GPUMemoryPartitionType) Type() protoreflect.EnumType {
	return &file_partition_proto_enumTypes[1]
}

func (x GPUMemoryPartitionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPUMemoryPartitionType.Descriptor instead.
func (GPUMemoryPartitionType) EnumDescriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{1}
}

type ProfileConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputePartition string `protobuf:"bytes,1,opt,name=ComputePartition,proto3" json:"computePartition,omitempty"`
	MemoryPartition  string `protobuf:"bytes,2,opt,name=MemoryPartition,proto3" json:"memoryPartition,omitempty"`
	NumGPUsAssigned  uint32 `protobuf:"varint,3,opt,name=NumGPUsAssigned,proto3" json:"numGPUsAssigned,omitempty"`
}

func (x *ProfileConfig) Reset() {
	*x = ProfileConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_partition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileConfig) ProtoMessage() {}

func (x *ProfileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_partition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileConfig.ProtoReflect.Descriptor instead.
func (*ProfileConfig) Descriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileConfig) GetComputePartition() string {
	if x != nil {
		return x.ComputePartition
	}
	return ""
}

func (x *ProfileConfig) GetMemoryPartition() string {
	if x != nil {
		return x.MemoryPartition
	}
	return ""
}

func (x *ProfileConfig) GetNumGPUsAssigned() uint32 {
	if x != nil {
		return x.NumGPUsAssigned
	}
	return 0
}

type SkippedGPUs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []uint32 `protobuf:"varint,1,rep,packed,name=Id,proto3" json:"ids,omitempty"`
}

func (x *SkippedGPUs) Reset() {
	*x = SkippedGPUs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_partition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkippedGPUs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkippedGPUs) ProtoMessage() {}

func (x *SkippedGPUs) ProtoReflect() protoreflect.Message {
	mi := &file_partition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkippedGPUs.ProtoReflect.Descriptor instead.
func (*SkippedGPUs) Descriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{1}
}

func (x *SkippedGPUs) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type GPUConfigProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters  *SkippedGPUs     `protobuf:"bytes,1,opt,name=Filters,proto3" json:"skippedGPUs,omitempty"`
	Profiles []*ProfileConfig `protobuf:"bytes,2,rep,name=Profiles,proto3" json:"profiles,omitempty"`
}

func (x *GPUConfigProfile) Reset() {
	*x = GPUConfigProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_partition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUConfigProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUConfigProfile) ProtoMessage() {}

func (x *GPUConfigProfile) ProtoReflect() protoreflect.Message {
	mi := &file_partition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUConfigProfile.ProtoReflect.Descriptor instead.
func (*GPUConfigProfile) Descriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{2}
}

func (x *GPUConfigProfile) GetFilters() *SkippedGPUs {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GPUConfigProfile) GetProfiles() []*ProfileConfig {
	if x != nil {
		return x.Profiles
	}
	return nil
}

// proto for gpu-config-profiles
type GPUConfigProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of all GPUPartitionType to be exported
	ProfilesList map[string]*GPUConfigProfile `protobuf:"bytes,1,rep,name=ProfilesList,proto3" json:"gpu-config-profiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GPUConfigProfiles) Reset() {
	*x = GPUConfigProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_partition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUConfigProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUConfigProfiles) ProtoMessage() {}

func (x *GPUConfigProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_partition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUConfigProfiles.ProtoReflect.Descriptor instead.
func (*GPUConfigProfiles) Descriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{3}
}

func (x *GPUConfigProfiles) GetProfilesList() map[string]*GPUConfigProfile {
	if x != nil {
		return x.ProfilesList
	}
	return nil
}

// structure contains a list of service names
type GPUServiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *GPUServiceList) Reset() {
	*x = GPUServiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_partition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUServiceList) ProtoMessage() {}

func (x *GPUServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_partition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUServiceList.ProtoReflect.Descriptor instead.
func (*GPUServiceList) Descriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{4}
}

func (x *GPUServiceList) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// proto embedding the structured list
type GPUClientSystemdServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List *GPUServiceList `protobuf:"bytes,1,opt,name=list,proto3" json:"gpuClientSystemdServices,omitempty"`
}

func (x *GPUClientSystemdServices) Reset() {
	*x = GPUClientSystemdServices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_partition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUClientSystemdServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUClientSystemdServices) ProtoMessage() {}

func (x *GPUClientSystemdServices) ProtoReflect() protoreflect.Message {
	mi := &file_partition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUClientSystemdServices.ProtoReflect.Descriptor instead.
func (*GPUClientSystemdServices) Descriptor() ([]byte, []int) {
	return file_partition_proto_rawDescGZIP(), []int{5}
}

func (x *GPUClientSystemdServices) GetList() *GPUServiceList {
	if x != nil {
		return x.List
	}
	return nil
}

var File_partition_proto protoreflect.FileDescriptor

var file_partition_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x47, 0x50, 0x55, 0x73, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x4e,
	0x75, 0x6d, 0x47, 0x50, 0x55, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x1d,
	0x0a, 0x0b, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x47, 0x50, 0x55, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x7a, 0x0a,
	0x10, 0x47, 0x50, 0x55, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x30, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x47, 0x50, 0x55, 0x73, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x47, 0x50,
	0x55, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x52, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x50, 0x55, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x1a, 0x5c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x50, 0x55, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x50, 0x55, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x18, 0x47, 0x50, 0x55,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x50, 0x55, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x2a, 0xa9, 0x01, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x50, 0x58, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x50, 0x58, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x50, 0x58, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e,
	0x47, 0x50, 0x55, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x50, 0x58, 0x10, 0x03,
	0x2a, 0x84, 0x01, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x47,
	0x50, 0x55, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x50, 0x53, 0x31, 0x10, 0x00, 0x12,
	0x22, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x50, 0x53,
	0x34, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x50, 0x53, 0x32, 0x10, 0x02, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_partition_proto_rawDescOnce sync.Once
	file_partition_proto_rawDescData = file_partition_proto_rawDesc
)

func file_partition_proto_rawDescGZIP() []byte {
	file_partition_proto_rawDescOnce.Do(func() {
		file_partition_proto_rawDescData = protoimpl.X.CompressGZIP(file_partition_proto_rawDescData)
	})
	return file_partition_proto_rawDescData
}

var file_partition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_partition_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_partition_proto_goTypes = []any{
	(GPUComputePartitionType)(0),     // 0: partition.GPUComputePartitionType
	(GPUMemoryPartitionType)(0),      // 1: partition.GPUMemoryPartitionType
	(*ProfileConfig)(nil),            // 2: partition.ProfileConfig
	(*SkippedGPUs)(nil),              // 3: partition.SkippedGPUs
	(*GPUConfigProfile)(nil),         // 4: partition.GPUConfigProfile
	(*GPUConfigProfiles)(nil),        // 5: partition.GPUConfigProfiles
	(*GPUServiceList)(nil),           // 6: partition.GPUServiceList
	(*GPUClientSystemdServices)(nil), // 7: partition.GPUClientSystemdServices
	nil,                              // 8: partition.GPUConfigProfiles.ProfilesListEntry
}
var file_partition_proto_depIdxs = []int32{
	3, // 0: partition.GPUConfigProfile.Filters:type_name -> partition.SkippedGPUs
	2, // 1: partition.GPUConfigProfile.Profiles:type_name -> partition.ProfileConfig
	8, // 2: partition.GPUConfigProfiles.ProfilesList:type_name -> partition.GPUConfigProfiles.ProfilesListEntry
	6, // 3: partition.GPUClientSystemdServices.list:type_name -> partition.GPUServiceList
	4, // 4: partition.GPUConfigProfiles.ProfilesListEntry.value:type_name -> partition.GPUConfigProfile
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_partition_proto_init() }
func file_partition_proto_init() {
	if File_partition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_partition_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProfileConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_partition_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SkippedGPUs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_partition_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GPUConfigProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_partition_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GPUConfigProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_partition_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GPUServiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_partition_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GPUClientSystemdServices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_partition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_partition_proto_goTypes,
		DependencyIndexes: file_partition_proto_depIdxs,
		EnumInfos:         file_partition_proto_enumTypes,
		MessageInfos:      file_partition_proto_msgTypes,
	}.Build()
	File_partition_proto = out.File
	file_partition_proto_rawDesc = nil
	file_partition_proto_goTypes = nil
	file_partition_proto_depIdxs = nil
}
